name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ----------------------------------
      # 1. 检出代码仓库
      # ----------------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 必须！确保检出完整历史

      # ----------------------------------
      # 2. 自动生成Gradle Wrapper（核心修复）
      # ----------------------------------
      - name: Generate Gradle Wrapper
        uses: gradle/gradle-build-action@v3
        with:
          arguments: wrapper --gradle-version 8.5  # 指定与项目兼容的Gradle版本

      # ----------------------------------
      # 3. 验证Wrapper完整性
      # ----------------------------------
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      # ----------------------------------
      # 4. 缓存优化
      # ----------------------------------
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # ----------------------------------
      # 5. Java环境配置
      # ----------------------------------
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # ----------------------------------
      # 6. 执行构建（使用生成的Wrapper）
      # ----------------------------------
      - name: Build with Gradle
        run: |
          chmod +x gradlew  # 确保执行权限
          ./gradlew build --no-daemon
          ls -l build/libs/

      # ----------------------------------
      # 7. 产物上传
      # ----------------------------------
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CapeShow-Mod
          path: build/libs/*.jar